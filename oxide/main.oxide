
use java::{lang::System, util::{Scanner, Random}}
inline func print(value) System.out.print(value)
inline func println(value) System.out.println(value)


func randBool {
    random = keep { Random() }
    random.nextBoolean()
}

func read {
    scanner = keep { Scanner(System.in) }
    scanner.nextLine()
}


impl<T> T | null {
    inline func unwrap(self, message) {
        match self {
            null -> panic(message)
            T -> self
        }
    }
}

func main {
    result = example().unwrap("expected value (panicing)")
    print(result.toString())
    todo.main()
}

struct A

impl A {
    func toString(self) {
        "A"
    }
}

func panic(message) {
    println(message)
    while true {}
}

func magic(value) {
    if randBool() {
        value
    } else {
        value
    }
}

func example {
    if magic(true) {
        A()
    } else {
        null
    }
}