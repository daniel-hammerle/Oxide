
func main {
    limit = parseInt(input("Limit > "))
    i = 1
    while i < limit {
        print(i)
        i = i+1
    }
    result = if limit >= 10 "big limit" else 3
    print(result.toString())
    egeg()
    ff()
    bar()
}



func parseInt(value) java::lang::Integer.parseInt(value)

func input(text) {
    scanner = keep {
        inStream = java::lang::System.in
        java::util::Scanner(inStream)
    }
    scanner.nextLine()
}

func print(value) java::lang::System.out.println(value)

func printRaw(value) java::lang::System.out.print(value)


func egeg {
    map = java::util::HashMap()
    map.put("Hello", Person("Tom", 18.1))
    print(map.get("Hello").age)
    map.put("Foo", Dog(3.2))
    print(map.get("Foo").age)
}



func x(list) {
    list.add("Hello World")
}

struct Person {
    name str,
    age num
}

struct Dog {
    age num
}

func ff {
    person = Person("Tom", 19.1)
    print(person.name == "Tom")
}


func f {
    result = test(2)
    result.foo("Hello World")
    main.print(result)
}

func test(x) {
    if x == 0 {
        com::example::Foo.instance
    } else {
        com::example::Bar.instance
    }
}


func bar {
    result = java::lang::System.out
    other = com::example::Foo.instance
    foo(result, "Hello World")
    foo(result, result)
    foo(other, "Hello")
    result = add(1, 2)
    print(result.toString())
}

func foo(x, y) {
    x.print("Y is:")
    x.print(y.toString())
}

func add(a, b) {
    a + b
}

